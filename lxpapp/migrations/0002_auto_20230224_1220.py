# Generated by Django 3.2.16 on 2023-02-24 06:50

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('lxpapp', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Chapter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chapter_name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_name', models.CharField(max_length=200)),
                ('chapter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.chapter')),
            ],
        ),
        migrations.CreateModel(
            name='CourseSet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('courseset_name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='KnownSkill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('knownskill_name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='LearnerDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_full_name', models.CharField(max_length=200)),
                ('mobile', models.IntegerField(default=0)),
                ('iswhatsapp', models.BooleanField(default=False)),
                ('whatsappno', models.IntegerField(default=0)),
                ('learner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PassionateSkill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('passionateskill_name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Playlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channel_id', models.TextField(blank=True)),
                ('channel_name', models.TextField(blank=True)),
                ('is_yt_mix', models.BooleanField(default=False)),
                ('playlist_id', models.CharField(max_length=150)),
                ('name', models.CharField(blank=True, max_length=150)),
                ('thumbnail_url', models.TextField(blank=True)),
                ('description', models.TextField(default='No description')),
                ('video_count', models.IntegerField(default=0)),
                ('published_at', models.DateTimeField(default=datetime.datetime.now)),
                ('is_private_on_yt', models.BooleanField(default=False)),
                ('playlist_yt_player_HTML', models.TextField(blank=True)),
                ('playlist_duration', models.CharField(blank=True, max_length=69)),
                ('playlist_duration_in_seconds', models.BigIntegerField(default=0)),
                ('started_on', models.DateTimeField(default=datetime.datetime.now, null=True)),
                ('last_watched', models.DateTimeField(default=datetime.datetime.now, null=True)),
                ('user_notes', models.TextField(default='')),
                ('user_label', models.CharField(default='', max_length=100)),
                ('marked_as', models.CharField(default='none', max_length=100)),
                ('is_favorite', models.BooleanField(blank=True, default=False)),
                ('num_of_accesses', models.IntegerField(default='0')),
                ('last_accessed_on', models.DateTimeField(default=datetime.datetime.now)),
                ('is_user_owned', models.BooleanField(default=True)),
                ('auto_check_for_updates', models.BooleanField(default=False)),
                ('is_in_db', models.BooleanField(default=False)),
                ('has_playlist_changed', models.BooleanField(default=False)),
                ('has_new_updates', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video_id', models.CharField(max_length=100)),
                ('name', models.CharField(blank=True, max_length=100)),
                ('duration', models.CharField(blank=True, max_length=100)),
                ('duration_in_seconds', models.BigIntegerField(default=0)),
                ('thumbnail_url', models.TextField(blank=True)),
                ('published_at', models.DateTimeField(default=datetime.datetime.now)),
                ('description', models.TextField(default='')),
                ('has_cc', models.BooleanField(blank=True, default=False, null=True)),
                ('liked', models.BooleanField(default=False)),
                ('public_stats_viewable', models.BooleanField(default=True)),
                ('view_count', models.BigIntegerField(default=0)),
                ('like_count', models.BigIntegerField(default=0)),
                ('dislike_count', models.BigIntegerField(default=0)),
                ('comment_count', models.BigIntegerField(default=0)),
                ('yt_player_HTML', models.TextField(blank=True)),
                ('channel_id', models.TextField(blank=True)),
                ('channel_name', models.TextField(blank=True)),
                ('is_unavailable_on_yt', models.BooleanField(default=False)),
                ('was_deleted_on_yt', models.BooleanField(default=False)),
                ('is_planned_to_watch', models.BooleanField(default=False)),
                ('is_marked_as_watched', models.BooleanField(default=False)),
                ('is_favorite', models.BooleanField(blank=True, default=False)),
                ('num_of_accesses', models.IntegerField(default=0)),
                ('user_label', models.CharField(blank=True, max_length=100)),
                ('user_notes', models.TextField(blank=True)),
                ('video_details_modified', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='UserPics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('picpath', models.TextField(default='')),
                ('pic', models.ImageField(upload_to='')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topic_name', models.CharField(max_length=200)),
                ('chapter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.chapter')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=69)),
                ('times_viewed', models.IntegerField(default=0)),
                ('times_viewed_per_week', models.IntegerField(default=0)),
                ('last_views_reset', models.DateTimeField(default=datetime.datetime.now)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='playlist_tags', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PlaylistItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('playlist_item_id', models.CharField(max_length=100)),
                ('video_position', models.IntegerField(blank=True)),
                ('published_at', models.DateTimeField(default=datetime.datetime.now)),
                ('channel_id', models.CharField(max_length=250, null=True)),
                ('channel_name', models.CharField(max_length=250, null=True)),
                ('is_duplicate', models.BooleanField(default=False)),
                ('is_marked_as_watched', models.BooleanField(blank=True, default=False)),
                ('num_of_accesses', models.IntegerField(default=0)),
                ('playlist', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='playlist_items', to='lxpapp.playlist')),
                ('video', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.video')),
            ],
        ),
        migrations.AddField(
            model_name='playlist',
            name='tags',
            field=models.ManyToManyField(related_name='playlists', to='lxpapp.Tag'),
        ),
        migrations.AddField(
            model_name='playlist',
            name='videos',
            field=models.ManyToManyField(related_name='playlists', to='lxpapp.Video'),
        ),
        migrations.CreateModel(
            name='Pin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kind', models.CharField(max_length=100)),
                ('playlist', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.playlist')),
                ('video', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.video')),
            ],
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('module_name', models.CharField(max_length=200)),
                ('subject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.subject')),
            ],
        ),
        migrations.CreateModel(
            name='LearnerDetailsPSkill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('learnerdetails', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.learnerdetails')),
                ('passionateskill', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.passionateskill')),
            ],
        ),
        migrations.CreateModel(
            name='LearnerDetailsKSkill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('knownskill', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.knownskill')),
                ('learnerdetails', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.learnerdetails')),
            ],
        ),
        migrations.CreateModel(
            name='IsFirstLogIn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='IncludePlaylist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('playlist', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.playlist')),
            ],
        ),
        migrations.CreateModel(
            name='CourseSetDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chapter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.chapter')),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.course')),
                ('courseset', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.courseset')),
                ('module', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.module')),
                ('subject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.subject')),
                ('topic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.topic')),
            ],
        ),
        migrations.CreateModel(
            name='CourseDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chapter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.chapter')),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.course')),
                ('module', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.module')),
                ('subject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.subject')),
                ('topic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.topic')),
            ],
        ),
        migrations.AddField(
            model_name='course',
            name='module',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.module'),
        ),
        migrations.AddField(
            model_name='course',
            name='subject',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.subject'),
        ),
        migrations.AddField(
            model_name='course',
            name='topic',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.topic'),
        ),
        migrations.AddField(
            model_name='chapter',
            name='module',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapp.module'),
        ),
    ]
