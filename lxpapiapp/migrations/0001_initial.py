# Generated by Django 5.1.5 on 2025-01-30 12:49

import datetime
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Batch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch_name', models.CharField(max_length=50)),
                ('stdate', models.DateField()),
                ('enddate', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Chapter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('youtube_id', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('chapter_name', models.CharField(max_length=200)),
                ('is_active', models.BooleanField(default=True)),
                ('is_youtube', models.BooleanField(default=False)),
                ('last_synced', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='CourseType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coursetype_name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('youtube_id', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('subject_name', models.CharField(max_length=200)),
                ('is_active', models.BooleanField(default=True)),
                ('is_youtube', models.BooleanField(default=False)),
                ('last_synced', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_full_name', models.CharField(blank=True, max_length=200, null=True)),
                ('email', models.CharField(max_length=200, null=True)),
                ('utype', models.CharField(choices=[('1', 'TRAINER'), ('2', 'LEARNER'), ('3', 'CTO'), ('4', 'CFO'), ('5', 'MENTOR'), ('6', 'STAFF')], default='2', max_length=200)),
                ('mobile', models.CharField(blank=True, max_length=10, null=True)),
                ('whatsappno', models.CharField(blank=True, max_length=10, null=True)),
                ('profile_pic', models.ImageField(blank=True, null=True, upload_to='profile_pics/')),
                ('profile_updated', models.BooleanField(default=False)),
                ('status', models.BooleanField(default=False)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('regdate', models.DateTimeField(default=datetime.datetime.now)),
                ('skills', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('bio', models.CharField(blank=True, default='', max_length=2000, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='BatchLearner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fee', models.IntegerField(default=0)),
                ('batch', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='batch_learners', to='lxpapiapp.batch')),
                ('learner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BatchTrainer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='batch_trainers', to='lxpapiapp.batch')),
                ('trainer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('serial_number', models.IntegerField(default=0)),
                ('urlvalue', models.CharField(max_length=2000)),
                ('description', models.CharField(max_length=200)),
                ('chapter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapiapp.chapter')),
                ('subject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapiapp.subject')),
            ],
            options={
                'ordering': ['subject', 'chapter', 'serial_number'],
            },
        ),
        migrations.CreateModel(
            name='ChapterQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=600)),
                ('option1', models.CharField(max_length=200)),
                ('option2', models.CharField(max_length=200)),
                ('option3', models.CharField(max_length=200)),
                ('option4', models.CharField(max_length=200)),
                ('answer', models.CharField(choices=[('1', 'Option1'), ('2', 'Option2'), ('3', 'Option3'), ('4', 'Option4')], max_length=200)),
                ('marks', models.IntegerField(default=0)),
                ('chapter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapiapp.chapter')),
                ('subject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapiapp.subject')),
            ],
        ),
        migrations.CreateModel(
            name='ChapterResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marks', models.PositiveIntegerField()),
                ('wrong', models.PositiveIntegerField()),
                ('correct', models.PositiveIntegerField()),
                ('timetaken', models.CharField(max_length=200)),
                ('date', models.DateTimeField(auto_now=True)),
                ('chapter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapiapp.chapter')),
                ('learner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ChapterResultDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('selected', models.CharField(max_length=200)),
                ('chapterresult', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapiapp.chapterresult')),
                ('question', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapiapp.chapterquestion')),
            ],
        ),
        migrations.CreateModel(
            name='ChapterWatched',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Chapter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapiapp.chapter')),
                ('learner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_name', models.CharField(max_length=200)),
                ('description', models.CharField(default='', max_length=1000)),
                ('whatlearn', models.CharField(default='', max_length=1000)),
                ('includes', models.CharField(default='', max_length=1000)),
                ('themecolor', models.CharField(choices=[('1', 'Advanced'), ('2', 'Easy'), ('3', 'Intermideate')], default='Green', max_length=200)),
                ('tags', models.CharField(default='', max_length=10000)),
                ('image', models.CharField(default='', max_length=1000)),
                ('banner', models.CharField(default='', max_length=1000)),
                ('price', models.IntegerField(default=0)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapiapp.category')),
            ],
        ),
        migrations.AddField(
            model_name='chapterresult',
            name='course',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapiapp.course'),
        ),
        migrations.CreateModel(
            name='BatchCourse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='batch_courses', to='lxpapiapp.batch')),
                ('course', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapiapp.course')),
            ],
        ),
        migrations.CreateModel(
            name='ActivityAnswers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_url', models.URLField()),
                ('marks', models.IntegerField(default=0)),
                ('remarks', models.CharField(default='', max_length=2000)),
                ('status', models.BooleanField(default=False)),
                ('submitted_on', models.DateTimeField(auto_now=True)),
                ('activity', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapiapp.activity')),
                ('learner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('chapter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapiapp.chapter')),
                ('course', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapiapp.course')),
            ],
        ),
        migrations.AddField(
            model_name='batch',
            name='coursetype',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapiapp.coursetype'),
        ),
        migrations.CreateModel(
            name='ErrorLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(max_length=2048)),
                ('exception', models.TextField()),
                ('traceback', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exam_name', models.CharField(max_length=50)),
                ('questiontpye', models.CharField(choices=[('MCQ', 'MCQ'), ('ShortAnswer', 'ShortAnswer')], default='', max_length=200)),
                ('batch', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapiapp.batch')),
            ],
        ),
        migrations.CreateModel(
            name='K8STerminal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Password', models.TextField()),
                ('usagevalue', models.PositiveIntegerField(default=0)),
                ('learner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_requests_learner', to=settings.AUTH_USER_MODEL)),
                ('trainer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_requests_trainer', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='K8STerminalLearnerCount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('usedvalue', models.PositiveIntegerField(default=0)),
                ('learner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LastUserLogin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LearnerCart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(default=0)),
                ('course', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapiapp.course')),
                ('learner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('serial_number', models.IntegerField(default=0)),
                ('topic', models.CharField(max_length=200)),
                ('mtype', models.CharField(choices=[('PDF', 'PDF'), ('HTML', 'HTML'), ('Chapter', 'Chapter'), ('URL', 'URL')], default='PDF', max_length=200)),
                ('urlvalue', models.CharField(max_length=2000)),
                ('description', models.CharField(max_length=200)),
                ('chapter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapiapp.chapter')),
                ('subject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapiapp.subject')),
            ],
            options={
                'ordering': ['subject', 'chapter', 'serial_number'],
            },
        ),
        migrations.CreateModel(
            name='LearnerMaterialWatched',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chapter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapiapp.chapter')),
                ('course', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapiapp.course')),
                ('learner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('material', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapiapp.material')),
            ],
        ),
        migrations.CreateModel(
            name='McqQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=600)),
                ('option1', models.CharField(max_length=200)),
                ('option2', models.CharField(max_length=200)),
                ('option3', models.CharField(max_length=200)),
                ('option4', models.CharField(max_length=200)),
                ('answer', models.CharField(choices=[('1', 'Option1'), ('2', 'Option2'), ('3', 'Option3'), ('4', 'Option4')], max_length=200)),
                ('marks', models.IntegerField(default=0)),
                ('exam', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapiapp.exam')),
            ],
        ),
        migrations.CreateModel(
            name='McqResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marks', models.PositiveIntegerField()),
                ('wrong', models.PositiveIntegerField()),
                ('correct', models.PositiveIntegerField()),
                ('timetaken', models.CharField(max_length=200)),
                ('date', models.DateTimeField(auto_now=True)),
                ('exam', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapiapp.exam')),
                ('learner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='McqResultDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('selected', models.CharField(max_length=200)),
                ('mcqresult', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapiapp.mcqresult')),
                ('question', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapiapp.mcqquestion')),
            ],
        ),
        migrations.CreateModel(
            name='Scheduler',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('1', 'Session'), ('2', 'Interview'), ('3', 'Client Requirement'), ('4', 'Lab Call'), ('5', 'Meeting'), ('6', 'Others')], max_length=2, null=True)),
                ('start', models.DateTimeField()),
                ('end', models.DateTimeField(blank=True, null=True)),
                ('eventdetails', models.CharField(max_length=200, null=True)),
                ('meeting_link', models.URLField(blank=True, max_length=500, null=True)),
                ('chapter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapiapp.chapter')),
                ('trainer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('subject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapiapp.subject')),
            ],
        ),
        migrations.CreateModel(
            name='SchedulerStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('status', models.PositiveIntegerField(default=0)),
                ('scheduler', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapiapp.scheduler')),
                ('trainer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ShortQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=600)),
                ('marks', models.IntegerField(default=0)),
                ('exam', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapiapp.exam')),
            ],
        ),
        migrations.CreateModel(
            name='ShortResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marks', models.PositiveIntegerField()),
                ('datecreate', models.DateTimeField(auto_now=True)),
                ('status', models.BooleanField(default=False)),
                ('timetaken', models.CharField(max_length=200)),
                ('exam', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapiapp.exam')),
                ('learner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ShortResultDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marks', models.PositiveIntegerField()),
                ('answer', models.CharField(max_length=200)),
                ('feedback', models.CharField(default='', max_length=200)),
                ('question', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapiapp.shortquestion')),
                ('shortresult', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapiapp.shortresult')),
            ],
        ),
        migrations.CreateModel(
            name='SubCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subcategory_name', models.CharField(max_length=200)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapiapp.category')),
            ],
        ),
        migrations.AddField(
            model_name='course',
            name='subcategory',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapiapp.subcategory'),
        ),
        migrations.CreateModel(
            name='SessionMaterial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mtype', models.CharField(choices=[('PDF', 'PDF'), ('HTML', 'HTML'), ('Chapter', 'Chapter'), ('URL', 'URL')], default='PDF', max_length=200)),
                ('urlvalue', models.CharField(max_length=200)),
                ('description', models.CharField(max_length=200)),
                ('Chapter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapiapp.chapter')),
                ('Subject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapiapp.subject')),
            ],
        ),
        migrations.CreateModel(
            name='LearnerSubjectCount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.PositiveIntegerField(default=0)),
                ('learner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('Subject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapiapp.subject')),
            ],
        ),
        migrations.CreateModel(
            name='CourseChapter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chapter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapiapp.chapter')),
                ('course', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapiapp.course')),
                ('subject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapiapp.subject')),
            ],
        ),
        migrations.CreateModel(
            name='ChapterToUnlock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Chapter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapiapp.chapter')),
                ('learner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('Subject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapiapp.subject')),
            ],
        ),
        migrations.AddField(
            model_name='chapterresult',
            name='subject',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapiapp.subject'),
        ),
        migrations.AddField(
            model_name='chapter',
            name='subject',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapiapp.subject'),
        ),
        migrations.CreateModel(
            name='BatchRecordedVDOList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='batch_videos', to='lxpapiapp.batch')),
                ('subject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapiapp.subject')),
            ],
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topic_name', models.CharField(max_length=200)),
                ('chapter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapiapp.chapter')),
                ('subject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapiapp.subject')),
            ],
        ),
        migrations.AddField(
            model_name='scheduler',
            name='topic',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapiapp.topic'),
        ),
        migrations.CreateModel(
            name='UserActivity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(max_length=2048)),
                ('method', models.CharField(max_length=16)),
                ('status_code', models.IntegerField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='UserLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('login', models.DateTimeField(default=datetime.datetime.now)),
                ('logout', models.DateTimeField(default=datetime.datetime.now)),
                ('dur', models.CharField(default='', max_length=200)),
                ('session_id', models.CharField(default='', max_length=200)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='YTExamQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=600)),
                ('option1', models.CharField(max_length=200)),
                ('option2', models.CharField(max_length=200)),
                ('option3', models.CharField(max_length=200)),
                ('option4', models.CharField(max_length=200)),
                ('answer', models.CharField(choices=[('1', 'Option1'), ('2', 'Option2'), ('3', 'Option3'), ('4', 'Option4')], max_length=200)),
                ('marks', models.IntegerField(default=1)),
                ('Chapter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapiapp.chapter')),
                ('Subject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapiapp.subject')),
            ],
        ),
        migrations.CreateModel(
            name='YTExamResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marks', models.PositiveIntegerField()),
                ('wrong', models.PositiveIntegerField()),
                ('correct', models.PositiveIntegerField()),
                ('timetaken', models.CharField(max_length=200)),
                ('date', models.DateTimeField(auto_now=True)),
                ('learner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('ytexamquestion', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapiapp.ytexamquestion')),
            ],
        ),
        migrations.CreateModel(
            name='YTExamResultDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('selected', models.CharField(max_length=200)),
                ('question', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapiapp.ytexamquestion')),
                ('ytexamresult', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lxpapiapp.ytexamresult')),
            ],
        ),
    ]
